{
  "hash": "18c7f2852b6d5e9f8ecf31b6616420ad",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Live-Coding\"\nsubtitle: Gamma regression for ED length of stay\nsearch: false\nformat: html\n---\n\n\n\n::: callout-important\n## Due date\n\nThis assignment is due on **Thursday, March 25 at 11:45am.** To be considered on time, the following must be done by the due date:\n\n-   Final `.qmd` and `.pdf` files pushed to your GitHub repo\n-   Final `.pdf` file submitted on Gradescope\n:::\n\n# Getting started\n\n-   Go to the [biostat725-sp25](https://www.github.com/biostat725-sp25) organization on GitHub. Click on the repo with the prefix **live-coding**. It contains the starter documents you need to complete the live coding exercise.\n\n-   Clone the repo and start a new project in RStudio. See the [AE 01 instructions](https://biostat725-sp25.netlify.app/ae/ae-01-mcmc#clone-the-repo-start-new-rstudio-project) for details on cloning a repo and starting a new project in R.\n\n# Packages\n\nThe following packages are used in this assignment:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rstan)\nlibrary(bayesplot)\nlibrary(knitr)\nlibrary(loo)\n\n# load other packages as needed\n```\n:::\n\n\n\n# Data\n\nThis live coding exercise will use data from the [MIMIC-IV-ED Demo](https://physionet.org/content/mimic-iv-ed-demo/2.2/). We will use the same data from Exam 01. To obtain an analysis data, source the R script to obtain a dataset called `exam1_data`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"exam-01-process-data.R\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\nWe will use the following variables from the dataset:\n\n-   `los`: continuous, ED length of stay in hours.\n\n-   `race`: categorical with three levels, `white`, `black`, and `other`.\n\n-   `arrival`: categorical with two levels that reports mode of arrival to ED, `ambulance`, and `walk-in`.\n\n-   `sex`: binary, `female` and `male`.\n\n-   `acuity_score`: categorical with three levels that reports a patient's level of emergency, `stable`, `complex/high-risk`, and `moderate-risk`.\n\n-   `o2sat`: continuous, oxygen saturation in %.\n\n# Motivation\n\nIn Exam 01, we modeled ED length of stay using quantile regression. Another approach for modeling the ED length of stay is Gamma regression. \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](live-coding_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n\nThe shape of the ED length of stay variable makes it a nice candidate for Gamma regression because it is continuous, positive, and right-skewed. In this live-coding exercise we will implement Gamma regression for ED length of stay using a log link function.\n\n# Gamma regression\n\n## Definition of Gamma Random Variable\n\nA random variable $Y$ with shape $\\lambda > 0$ and scale $\\theta > 0$ can be written as $Y \\sim \\text{Gamma}(\\lambda, \\theta)$ with density $f_Y(y | \\lambda, \\theta) = (\\Gamma(\\lambda) \\theta^{\\lambda})^{-1}y^{\\lambda-1}\\exp\\{-y/\\theta\\}$. The mean and variance are given by: $\\mathbb{E}[Y] = \\lambda\\theta = \\mu$ and $\\mathbb{V}(Y) = \\lambda\\theta^2$. One way to perform regression for a Gamma distributed random variable is to make a change-of-variables so that the density is parameterized in terms of the mean $\\mu = \\lambda\\theta$ and the un-transformed shape parameter $\\tau = \\lambda$. The density for this transformed distribution is,\n\n$$f_Y(y | \\tau, \\mu) = \\frac{\\exp\\{-(y\\tau)/\\mu\\}y^{\\tau-1}}{(\\mu/\\tau)^{\\tau} \\Gamma(\\tau)},$$\n\nand the log density is given by,\n\n$$\\log f_Y(y | \\tau, \\mu) = -(y\\tau)/\\mu + (\\tau-1)\\log (y) + \\tau[\\log(\\tau) - \\log(\\mu)] - \\log (\\Gamma(\\tau)).$$ To perform Gamma regression, predictors are related to the mean using a log link function, $\\log \\mu_i = \\alpha + \\mathbf{x}_i \\boldsymbol{\\beta}$. Thus, the full model can be written as,\n\n\\begin{align*}\nY_i &\\stackrel{ind}{\\sim} \\text{Gamma}(\\tau, \\mu_i),\\quad i = 1,\\ldots,n\\\\\n\\log \\mu_i &= \\alpha + \\mathbf{x}_i \\boldsymbol{\\beta},\\\\\n\\boldsymbol{\\Omega} &\\sim f(\\boldsymbol{\\Omega}),\n\\end{align*}\n\nwhere $\\boldsymbol{\\Omega} = (\\alpha,\\boldsymbol{\\beta},\\tau)$.\n\n## Interpreting Coefficients\n\nTo interpret the coefficients, you must exponentiate them, $\\gamma_j = \\exp\\{\\beta_j\\}$. It is easy to see that $\\gamma_j$ can be interpreted as a multiplicative factor on the mean. To see this, we can consider a particular variable $x_{ij}$ and its corresponding coefficient $\\beta_j$. Define $\\mathbf{x}_{i,-j} = (x_{i1},\\ldots,x_{i(j-1)}, x_{i(j+1)}, \\ldots, x_{ip})$ and $\\boldsymbol{\\beta}_{-j} = (\\beta_{1},\\ldots,\\beta_{j-1}, \\beta_{j+1}, \\ldots, \\beta_{p})^\\top$ as object that have removed the $j$-th entry. Now assume that we observe two observations $\\mathbf{x}_i$ and $\\mathbf{x}_{i'}$, such that the only difference between the two are that $x_{i'j} = x_{ij} + 1$. From this setup, we can see that indeed the $\\gamma_j$ can be interpreted as being multiplicative on the mean, \\begin{align*}\n\\mu_{i'} &= \\exp\\{\\alpha +\\mathbf{x}_{i'}\\boldsymbol{\\beta}\\}\\\\\n&= \\exp\\left\\{\\alpha +\\mathbf{x}_{i',-j} \\boldsymbol{\\beta}_{-j} + x_{i'j} \\beta_j\\right\\}\\\\\n&= \\exp\\left\\{\\alpha +\\mathbf{x}_{i,-j} \\boldsymbol{\\beta}_{-j} + (x_{ij} + 1) \\beta_j\\right\\}\\\\\n&= \\exp\\left\\{\\alpha +\\mathbf{x}_{i,-j} \\boldsymbol{\\beta}_{-j} + x_{ij} \\beta_j + \\beta_j\\right\\}\\\\\n&= \\exp\\left\\{\\alpha +\\mathbf{x}_{i} \\boldsymbol{\\beta} + \\beta_j\\right\\}\\\\\n&= \\exp\\left\\{\\alpha +\\mathbf{x}_{i} \\boldsymbol{\\beta}\\right\\}\\exp\\{\\beta_j\\}\\\\\n&= \\mu_i \\gamma_j.\n\\end{align*}\n\nThus, a one-unit increase in $x_{ij}$ leads to a multiplicative increase in the mean of $\\gamma_j$.\n\n# Exercises\n\nWe are interested in fitting a Gamma regression to the ED length of stay variable, defined as $Y_i$ for $i = 1,\\ldots,n$. We would like to fit the following model,\n\n\\begin{align*}\nY_i &\\stackrel{ind}{\\sim} \\text{Gamma}(\\tau,\\mu_i)\\\\\n\\log \\mu_i &= \\alpha + \\mathbf{x}_i\\boldsymbol{\\beta}\\\\\n&= \\alpha + \\beta_1 black_i + \\beta_2 other_i + \\beta_3 arrival\\_walkin_i\\\\\n&\\quad+ \\beta_4 male_i + \\beta_5 acuity\\_score\\_moderate_i\\\\\n&\\quad+ \\beta_6 acuity\\_score\\_complex_i + \\beta_7 o2sat_i.\n\\end{align*}\n\nWhen you fit the model, make sure to center the predictors, such that $\\log \\mu_i = \\alpha^* + \\mathbf{x}_i^* \\boldsymbol{\\beta}$, where $\\mathbf{x}_i^* = \\mathbf{x}_i - \\bar{\\mathbf{x}}$ and $\\bar{\\mathbf{x}} = \\frac{1}{n}\\sum_{i=1}^n \\mathbf{x}_i$. Use the following priors $\\alpha^* \\sim N(0,4^2)$, $\\beta_j \\stackrel{ind}{\\sim} N(0,1^2)$, $j = 1,\\ldots,p$ and $\\tau \\sim \\text{Exponential}(1).$\n\n## Exercise 1\n\nTo perform Gamma regression in Stan, we need to manually encode the likelihood function. Create a function in your Stan code called `gamma_regression_lpdf` that encodes the log-likelihood function, $\\sum_{i=1}^n \\log f_Y(Y_i|\\tau,\\mu_i)$. To answer this question, print the function you created using a `stan` code chunk.\n\n## Exercise 2\n\nUsing your function from **Exercise 1** fit the Gamma regression model.\n\n## Exercise 3\n\nSanity check: `summary(glm(los ~ race + arrival + sex + acuity_score + o2sat, data = exam1_data, family = Gamma(link = \"log\")))`. How do the results compare?\n\n## Exercise 4\n\nWe would like to perform posterior predictive checks for our model. In order to do this we must sample from a Gamma random variable in the generated quantities block. The only built in [Stan function](https://mc-stan.org/docs/functions-reference/positive_continuous_distributions.html#gamma-distribution) for sampling from Gamma random variables is `gamma_rng` which samples from a Gamma random variable with $Y \\sim \\text{Gamma}(\\lambda, \\kappa)$ with density $f_Y(y | \\lambda, \\kappa) = \\frac{\\kappa^{\\lambda}}{\\Gamma(\\lambda)}y^{\\lambda-1}\\exp\\{-\\kappa y\\}$, where $\\lambda$ is the shape parameter and $\\kappa$ is the inverse scale (or rate), such that $\\kappa = 1 / \\theta$. Use the `gamma_rng` to create a function called `gamma_regression_rng` that can be used to sample the posterior predictive distribution.\n\n## Exercise 5\n\nUsing the function from **Exercise 4**, perform a posterior predictive check to assess model fit. Does the model fit the data well?\n\n\n\n",
    "supporting": [
      "live-coding_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "e6733f52ea5791835235f65aaa85925d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 01: Posterior estimation using Gibbs sampling \"\nsubtitle: \"Glaucoma disease progression\"\ndate: \"Jan 16, 2025\"\n---\n\n\n\n::: callout-important\n## Due date\n\nApplication exercises (AEs) are submitted by pushing your work to the relevant GitHub repo. AEs from Tuesday lectures should be submitted by Friday by 11:59pm ET, and AEs from Thursday lectures should be submitted by Sunday at 11:59pm ET. Because AEs are intended for in-class activities, there are no extensions given on AEs.\n\nThis AE is due on **Sunday, January 19 at 11:59pm.** To be considered on time, the following must be done by the due date:\n\n-   Final `.qmd` and `.pdf` files pushed to your GitHub repo\n-   **Note:** For homeworks and exams, you will also be required to submit your final `.pdf` file submitted on Gradescope\n:::\n\n# Introduction\n\nThis AE will go through much of the workflow we will use in the course. The main goal is to demo the use of R and RStudio, which we will be using throughout the course both to learn the statistical concepts discussed in the course and to analyze real data and come to informed conclusions.\n\n## Learning goals\n\nBy the end of the AE, you will...\n\n-   Be familiar with the workflow using RStudio and GitHub\n-   Gain practice writing a reproducible report using Quarto\n-   Practice version control using GitHub\n-   Perform Gibbs sampling for Bayesian linear regression and compute some basic summaries\n\n# Getting Started\n\n## Clone the repo & start new RStudio project\n\n-   Go to the course organization at [github.com/biostat725-sp25](https://github.com/biostat725-sp25) organization on GitHub.\n-   Click on the repo with the prefix **ae-01-**. It contains the starter documents you need to complete the AE.\n-   Click on the green **CODE** button, select **Use SSH** (this might already be selected by default, and if it is, you'll see the text **Clone with SSH**). Click on the clipboard icon to copy the repo URL.\n    -   See the [HW 00 instructions](https://biostat725-sp25.netlify.app/hw/hw-00#connect-rstudio-and-github) if you have not set up the SSH key or configured git.\n-   In RStudio, go to *File* $\\rightarrow$ *New Project* $\\rightarrow$ *Version Control* $\\rightarrow$ *Git*.\n-   Copy and paste the URL of your assignment repo into the dialog box *Repository URL*. Again, please make sure to have *SSH* highlighted under *Clone* when you copy the address.\n-   Click *Create Project*, and the files from your GitHub repo will be displayed in the *Files* pane in RStudio.\n-   Click `ae-01-linear-regression.qmd` to open the template Quarto file. This is where you will write up your code and narrative for the AE.\n\n## R and R Studio\n\nBelow are the components of the RStudio IDE.\n\n![](images/rstudio-panes.png){fig-alt=\"Screenshot of RStudio IDE\" fig-align=\"center\"}\n\nBelow are the components of a Quarto (`.qmd`) file.\n\n![](images/quarto.png){fig-alt=\"Screenshot of Quarto document and rendered PDF.\" fig-align=\"center\"}\n\n### YAML\n\nThe top portion of your Quarto file (between the three dashed lines) is called **YAML**. It stands for \"YAML Ain't Markup Language\". It is a human friendly data serialization standard for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\n\n::: callout-important\nOpen the Quarto (.qmd) file in your project, change the author name to your name, and render the document. Examine the rendered document.\n:::\n\n### Committing changes\n\nNow, go to the Git pane in your RStudio instance. This will be in the top right hand corner in a separate tab.\n\nIf you have made changes to your Quarto (.qmd) file, you should see it listed here. Click on it to select it in this list and then click on **Diff**. This shows you the *diff*erence between the last committed state of the document and its current state including changes. You should see deletions in red and additions in green.\n\nIf you're happy with these changes, we'll prepare the changes to be pushed to your remote repository. First, **stage** your changes by checking the appropriate box on the files you want to prepare. Next, write a meaningful commit message (for instance, \"updated author name\") in the **Commit message** box. Finally, click **Commit**. Note that every commit needs to have a commit message associated with it.\n\nYou don't have to commit after every change, as this would get quite tedious. You should commit states that are *meaningful to you* for inspection, comparison, or restoration.\n\nIn the first few assignments we may tell you exactly when to commit and in some cases, what commit message to use. As the semester progresses we will let you make these decisions.\n\n### Push changes\n\nNow that you have made an update and committed this change, it's time to push these changes to your repo on GitHub.\n\nIn order to push your changes to GitHub, you must have **staged** your **commit** to be pushed. click on **Push**.\n\nNow let's make sure all the changes went to GitHub. Go to your GitHub repo and refresh the page. You should see your commit message next to the updated files. If you see this, all your changes are on GitHub and you're good to go!\n\n<!-- ::: callout-important -->\n\n<!-- Go to the [course GitHub organization](https://github.com/biostat725-sp25) and locate your `ae-01` repo to get started. -->\n\n<!-- Render, commit, and push your responses to GitHub by the end of class to submit your AE. -->\n\n<!-- ::: -->\n\n# R packages\n\nWe will begin by loading R packages that we will use in this AE.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)    # data wrangling and visualization\nlibrary(tidymodels)   # broom and yardstick package\nlibrary(knitr)        # format output\nlibrary(skimr)        # quickly calculate summary statistics\nlibrary(mvtnorm)      # multivariate normal rng\n```\n:::\n\n\n\n# Data\n\n![Visual Field Assessment](images/Picture1.jpg){fig-alt=\"vf\" fig-align=\"center\" width=\"75%\"}\n\nThe data are on patients with glaucoma from the [Rotterdam Ophthalmic Data Repository](http://www.rodrep.com/longitudinal-glaucomatous-vf-data---description.html). Glaucoma is the leading cause of irreversible blindness world wide with over 60 million glaucoma patients as of 2012. Since impairment caused by glaucoma is irreversible, early detection of disease progression is crucial for effective treatment. Patients with glaucoma are routinely followed up and administered visual fields, a functional assessment of their vision. After each visual field test their current disease status is reported as a mean deviation value, measured in decibels (dB). A lower mean deviation indicates worse vision. An important predictor of disease progression is intraocular pressure (IOP), the pressure of fluids inside your eye.\n\nWe will focus on two variables:\n\n-   `iop`: intraocular pressure, measured in millimeters of mercury (mmHg)\n\n-   `progression`: rate of disease progression, measured as the number dB lost per year (dB/year)\n\nThe goal of this analysis is to use the IOP to understand variability in disease progression in glaucoma patients. The data is available in the `ae-01-` repo and is called `glaucoma.rds`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglaucoma <- readRDS(file = \"glaucoma.rds\")\nglimpse(glaucoma)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 139\nColumns: 7\n$ id          <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ age         <dbl> 51.55616, 76.78356, 46.38356, 42.56712, 68.36438, 56.61644…\n$ sex         <chr> \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"F\", \"F\", \"M\", \"M\", \"M\", \"M\"…\n$ iop         <dbl> 10.333333, 11.750000, 14.666667, 5.333333, 12.666667, 18.3…\n$ baseline_md <dbl> -7.69, -5.38, -22.05, -13.99, -13.02, -7.13, -2.69, -9.43,…\n$ severity    <chr> \"Moderate\", \"Mild\", \"Severe\", \"Severe\", \"Severe\", \"Moderat…\n$ progression <dbl> -0.190141797, -0.055098961, 0.431682497, 0.218545250, 0.08…\n```\n\n\n:::\n:::\n\n\n\n# Exploratory data analysis\n\nLet's begin by examining the univariate distributions of the disease progression and IOP. The code to visualize and calculate summary statistics for `progression` is below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = glaucoma, aes(x = progression)) + \n  geom_histogram() +\n  labs(x = \"Disease progression (db/year)\", \n       y = \"Count\",\n       title = \"Disease progression in glaucoma patients\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ae-01-mcmc_files/figure-html/progression-viz-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglaucoma |>\n  summarise(min = min(progression), q1 = quantile(progression, 0.25), \n            median = median(progression), q3 = quantile(progression, 0.75), \n            max = max(progression), mean = mean(progression), sd = sd(progression)) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|    min|     q1| median|    q3|   max|   mean|    sd|\n|------:|------:|------:|-----:|-----:|------:|-----:|\n| -1.981| -0.207| -0.022| 0.149| 1.107| -0.079| 0.441|\n\n\n:::\n:::\n\n\n\n# Posterior estimation\n\nYou want to fit a model of the form\n\n$$\nprogression_i = \\beta_0 + \\beta_1 ~ iop_i + \\epsilon, \\hspace{5mm} \\epsilon \\sim N(0, \\sigma^2).\n$$\n\nWe can obtain samples from the posterior distribution for the regression parameters using the specification from the slides. We define the data objects needed for posterior estimation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX <- cbind(1, glaucoma$iop) # covariate matrix\nY <- glaucoma$progression # outcome definition\np <- ncol(X) - 1 # number of covariates (excluding the intercept)\nn <- length(Y) # number of observations\n```\n:::\n\n\n\nWe will then define hyperparameters for the priors. We will choose a weakly informative prior. We will discuss more about priors in subsequent lectures. For now, we will place the following priors: $\\boldsymbol{\\beta} \\sim N(\\boldsymbol{\\beta}_0,\\sigma_{\\beta}^2 \\mathbf{I}_2)$ and $\\sigma^2 \\sim \\text{Inv-Gamma}(a,b)$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma_beta2 <- 10\nbeta0 <- rep(0, p + 1)\na <- 3 \nb <- 1\n```\n:::\n\n\n\nWe can now obtain samples from the posterior using Gibbs sampling. Let's set $S=5,000$. We begin by randomly initializing $\\sigma^2$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nS <- 5000\nsigma2 <- exp(rnorm(1)) # initial value\n```\n:::\n\n\n\nRun a `for` loop over samples.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples <- NULL\nfor (s in 1:S) {\n  \n  ###Sample from full conditional for beta\n  var_beta <- chol2inv(chol(t(X) %*% X / sigma2 + diag(p + 1) / sigma_beta2))\n  mean_beta <- var_beta %*% (beta0 / sigma_beta2 + t(X) %*% Y / sigma2)\n  beta <- as.numeric(rmvnorm(1, mean_beta, var_beta))\n  \n  ###Sample from full conditional for sigma2\n  quadratic <- as.numeric(t(Y - X %*% beta) %*% (Y - X %*% beta))\n  sigma2 <- 1 / rgamma(1, shape = a + n / 2, rate = b + quadratic / 2)\n  \n  ###Save samples\n  samples <- rbind(samples, c(beta, sigma2))\n  \n}\n```\n:::\n\n\n\n# Insepction of Gibbs sampler\n\nWe can begin by inspecting the posterior density and traceplots.\n\n\n\n::: {.cell layout-nrow=\"2\" layout-align=\"center\"}\n\n```{.r .cell-code}\ndat.fig <- data.frame(\n  parameter = rep(c(\"beta[0]\", \"beta[1]\", \"sigma^2\"), each = S),\n  index = rep(1:S, 3),\n  value = as.numeric(samples)\n)\nggplot(dat.fig, aes(x = value)) +\n  geom_density(lwd = 1.5) +\n  facet_grid(. ~ parameter, labeller = label_parsed, scales = \"free_x\") +\n  ylab(\"Density\") +\n  xlab(\"Parameter value\")\n```\n\n::: {.cell-output-display}\n![](ae-01-mcmc_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\nggplot(dat.fig, aes(x = index, y = value)) + \n  geom_line(lwd = 0.5) + \n  facet_grid(. ~ parameter, labeller = label_parsed, scales = \"free_x\") + \n  ylab(\"Parameter value\") +\n  xlab(\"Sample index\")\n```\n\n::: {.cell-output-display}\n![](ae-01-mcmc_files/figure-html/unnamed-chunk-10-2.png){fig-align='center' width=672}\n:::\n:::\n\n\n\nThe traceplots do not exhibit much autocorrelation, indicating our samples have properly converged. We will dive into this much more in subsequent lectures.\n\n# Exercises\n\n## Exercise 1\n\nCompute the posterior mean and standard deviation for the intercept, slope, and measurement error. Provide an interpretation for each of these parameter estimates.\n\n**Answer:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 2\n\nCompute a 95% confidence interval for the regression slope. Provide an interpretation for this confidence interval.\n\n**Answer:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n## Exercise 3\n\nCompute a one-sided Bayesian p-value for the regression slope: $P(\\beta_1 < 0)$. Interpret the results in plain English. Is intraocular pressure associated with disease progression? \n\n**Answer:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n::: callout-important\nTo submit the AE:\n\n-   Render the document to produce the PDF with all of your work from today's class.\n-   Push all your work to your AE repo on GitHub. You're done! 🎉\n:::\n",
    "supporting": [
      "ae-01-mcmc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
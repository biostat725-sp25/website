---
title: "Missing Data"
author: "Prof. Sam Berchuck"
date: "2025-02-25"
date-format: "MMM DD, YYYY"
footer: "[ðŸ”— BIOSTAT 725 - Spring 2025](https://biostat725-sp25.netlify.app/)"
logo: "../images/logo.png"
format: 
  revealjs:
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
    html-math-method: mathjax
filters:
  - parse-latex
execute:
  freeze: auto
  echo: true
knitr:
  opts_chunk: 
    R.options:      
    width: 200
bibliography: references.bib
---

```{r, echo=FALSE}
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(knitr)
library(mvtnorm)
library(coda)
library(lars)
library(LaplacesDemon)
library(nimble)
library(mice)
```

## Review of last lecture

-   Last, we learned about classification for binary and multiclass problems.

## Missing data in research

-   In any real-world dataset, missing values are nearly always going to be present.

    -   Missing data can be totally innocuous or a source of bias.

-   Cannot determine which because there are no values to inspect.

-   Handling missing data is extremely difficult!

## Example

-   Suppose an individual's depression scores are missing in dataset of patients with colon cancer.

-   It could be missing because:

    -   A data entry error where some values did not make it into the dataset.

    -   The patient is a man, and men are less likely to complete the depression score in general (i.e., it is not related to the unobserved depression).

    -   The patient has depression and as a result did not complete the depression survey.

## Classifactions of missing data

-   Missing completely at random (MCAR)

    -   This is the ideal case but rarely seen in practice. Usually a data entry problem.

-   Missing at random (MAR)

    -   The missing value is related to some other variable that has been collected.

-   Missing not at random (MNAR)

    -   The missing value is related to a variable that was not collected or not observed.

## Missing data

-   Missing data can appear in the outcome and/or predictors.

-   Today, we will write down some math for missing data occuring in the outcome space, however this is generalizable to missingness in the predictor space.

## Missing data framework {.midi}

-   We are interested in modeling a random variable $Y_{i}$, for $i \in \{1,\ldots,n\}$.

-   In a missing data setting, we only observe the outcome in subset of observations, $\mathbf{Y}_{obs} = \{Y_{i}:i \in \mathcal N_{obs}\}$.

    -   $\mathcal N_{obs}$ is the set of indeces in the observed set, such that $|\mathcal N_{obs}|= n_{obs}$ is the number of observed data points.

-   The remaining observations are assumed to be missing and are contained in $\mathbf{Y}_{mis} = \{Y_{i}:i \in \mathcal N_{mis}\}$.

    -   $\mathcal N_{mis}$ is the set of indeces of the missing data and $|\mathcal N_{mis}|= n_{mis}$ is the number of missing data points.

-   The full set of data is given by $\mathbf{Y}=(\mathbf{Y}_{obs},\mathbf{Y}_{mis})$.

## Missing data notation

-   Define $O_{i}$ as a binary indicator of observation $Y_{i}$ being present, where $O_{i} = 1$ indicates that $Y_{i}$ was observed.

-   The collection of missingness indicators is given by $\mathbf{O} = \{O_{i}:i = 1,\ldots,n\}$.

-   Our observed data then consists of $(\mathbf{Y}_{obs}, \mathbf{O})$.

## Complete data likelihood

-   The joint distribution of $(\mathbf{Y}, \mathbf{O})$ can be written as,

$$f(\mathbf{Y}, \mathbf{O} | \mathbf{X}, \boldsymbol{\theta},\boldsymbol{\phi}) = \underbrace{f(\mathbf{Y} | \mathbf{X}, \boldsymbol{\theta})}_{\text{likelihood}} \times  \underbrace{f(\mathbf{O} | \mathbf{Y}, \mathbf{X}, \boldsymbol{\phi})}_{\text{missing model}}.$$

-   The parameter block, $(\boldsymbol{\theta},\boldsymbol{\phi})$, consists of:

    -   $\boldsymbol{\theta}$, the **target parameters** of interest (e.g., feature effects on outcome), and

    -   $\boldsymbol{\phi}$, the **nuisance parameters**.

. . .

**Can we perform inference using this likelihood?**

## Observed data likelihood

-   The likelihood for the observed data must be written by marginalizing over the unobserved outcome variables.

\begin{align*}
f(\mathbf{Y}_{obs}, \mathbf{O} | \mathbf{X}, \boldsymbol{\theta},\boldsymbol{\phi}) &= \int f(\mathbf{Y}_{obs}, \mathbf{Y}_{mis}, \mathbf{O} | \mathbf{X}, \boldsymbol{\theta},\boldsymbol{\phi}) d\mathbf{Y}_{mis}\\
&= \int f(\mathbf{Y}, \mathbf{O} |\mathbf{X}, \boldsymbol{\theta},\boldsymbol{\phi}) d\mathbf{Y}_{mis}\\
&= \int \underbrace{f(\mathbf{Y} |\mathbf{X}, \boldsymbol{\theta}) f(\mathbf{O} | \mathbf{X},\mathbf{Y}, \boldsymbol{\phi})}_{\text{complete data likelihood}} d\mathbf{Y}_{mis}
\end{align*}

## Missing data models: MCAR

The data are missing completely at random (MCAR) if the missing mechanism is defined as, \begin{align*}
f(\mathbf{O} | \mathbf{Y},\mathbf{X},\boldsymbol{\phi}) &= f(\mathbf{O} | \mathbf{Y}_{obs}, \mathbf{Y}_{mis},\mathbf{X},\boldsymbol{\phi})\\
&= f(\mathbf{O} | \boldsymbol{\phi}).
\end{align*}

-   The missingness does not depend on any data.

## Implications of the missing model: MCAR {.midi}

\begin{align*}
f(\mathbf{Y}_{obs}, \mathbf{O} |\mathbf{X}, \boldsymbol{\theta},\boldsymbol{\phi}) &= \int f(\mathbf{Y} | \mathbf{X},\boldsymbol{\theta}) f(\mathbf{O} | \mathbf{Y}, \mathbf{X},\boldsymbol{\phi}) d\mathbf{Y}_{mis}\\
&= \int f(\mathbf{Y} | \mathbf{X},\boldsymbol{\theta}) f(\mathbf{O} | \boldsymbol{\phi}) d\mathbf{Y}_{mis}\\
&=  f(\mathbf{O} | \boldsymbol{\phi}) \int f(\mathbf{Y}_{obs} |\mathbf{X}_{obs}, \boldsymbol{\theta}) f(\mathbf{Y}_{mis} |\mathbf{X}_{mis}, \boldsymbol{\theta})d\mathbf{Y}_{mis}\\
&=  f(\mathbf{Y}_{obs} | \mathbf{X}_{obs},\boldsymbol{\theta})f(\mathbf{O} | \boldsymbol{\phi})\int  f(\mathbf{Y}_{mis} |\mathbf{X}_{mis}, \boldsymbol{\theta}) d\mathbf{Y}_{mis}\\
&=  f(\mathbf{Y}_{obs} | \mathbf{X}_{obs},\boldsymbol{\theta})f(\mathbf{O} | \boldsymbol{\phi}).
\end{align*}

## Key points about MCAR assumption

-   **No bias:** The analysis based on the observed data will not be biased, as the missingness does not systematically favor any particular pattern in the data.

-   **Reduced power:** While unbiased, MCAR still reduces the statistical power of the analysis due to the smaller sample size resulting from missing data.

-   **Simple handling methods:** Because of its random nature, MCAR allows for straightforward handling methods like ***listwise deletion*** (i.e., complete-case analysis) or simple imputation techniques (e.g., mean imputation) without introducing bias.

## Missing data models: MAR

The data are missing at random (MAR) if the missing mechanism is defined as, \begin{align*}
f(\mathbf{O} | \mathbf{Y},\mathbf{X},\boldsymbol{\phi}) &= f(\mathbf{O} | \mathbf{Y}_{obs}, \mathbf{Y}_{mis},\mathbf{X},\boldsymbol{\phi})\\
&= f(\mathbf{O} | \mathbf{Y}_{obs},\mathbf{X},\boldsymbol{\phi}).
\end{align*}

-   The missingness depends on the observed data only.

## Implications of the missing model: MAR {.midi}

\begin{align*}
f(\mathbf{Y}_{obs}, \mathbf{O} |\mathbf{X}, \boldsymbol{\theta},\boldsymbol{\phi}) &= \int f(\mathbf{Y} |\mathbf{X}, \boldsymbol{\theta}) f(\mathbf{O} | \mathbf{Y},\mathbf{X}, \boldsymbol{\phi}) d\mathbf{Y}_{mis}\\
&\hspace{-2in}= \int f(\mathbf{Y} | \mathbf{X},\boldsymbol{\theta}) f(\mathbf{O} | \mathbf{Y}_{obs},\mathbf{X}, \boldsymbol{\phi}) d\mathbf{Y}_{mis}\\
&\hspace{-2in}=  f(\mathbf{O} | \mathbf{Y}_{obs},\mathbf{X},\boldsymbol{\phi}) \int f(\mathbf{Y}_{obs} | \mathbf{X}_{obs},\boldsymbol{\theta}) f(\mathbf{Y}_{mis} | \mathbf{X}_{mis},\boldsymbol{\theta})d\mathbf{Y}_{mis}\\
&\hspace{-2in}=  f(\mathbf{Y}_{obs} |\mathbf{X}_{obs}, \boldsymbol{\theta})f(\mathbf{O} |\mathbf{Y}_{obs},\mathbf{X}, \boldsymbol{\phi})\int  f(\mathbf{Y}_{mis} | \mathbf{X}_{mis},\boldsymbol{\theta}) d\mathbf{Y}_{mis}\\
&\hspace{-2in}=  f(\mathbf{Y}_{obs} | \mathbf{X}_{obs},\boldsymbol{\theta})f(\mathbf{O} |\mathbf{Y}_{obs}, \mathbf{X},\boldsymbol{\phi}).
\end{align*}

-   **Unbiased Parameter Estimates:** Similar to MCAR, we can perform a complete case analysis and can ignore the missing data model! This is never done, however, because it leads to incorrect inference.

## Key points about MAR assumption

-   **Complete-case analysis is not acceptable:**

    -   Parameter estimation remains unbiased, but, in general, estimation of variances and intervals is biased.

    -   Also, smaller sample size leads to less power and worse prediction.

    -   Under certain missingness settings, parameter estimation may not be unbiased.

-   **Simple handling approaches fail:** Methods like mean imputation will also result in small estimated standard errors.

-   **More advanced methods are needed:** Multiple imputation, Bayes.

## Missing data models: MNAR

The data are missing not at random (MNAR) if the missing mechanism is defined as, \begin{align*}
f(\mathbf{O} | \mathbf{Y},\mathbf{X},\boldsymbol{\phi}) &= f(\mathbf{O} | \mathbf{Y}_{obs}, \mathbf{Y}_{mis},\mathbf{X},\boldsymbol{\phi}).
\end{align*}

-   The missingness depends on the observed and missing data.

## Implications of the missing model: MNAR {.midi}

\begin{align*}
f(\mathbf{Y}_{obs}, \mathbf{O} | \mathbf{X},\boldsymbol{\theta},\boldsymbol{\phi}) &= \int f(\mathbf{Y} | \mathbf{X},\boldsymbol{\theta}) f(\mathbf{O} | \mathbf{Y},\mathbf{X}, \boldsymbol{\phi}) d\mathbf{Y}_{mis}\\
&\hspace{-2in}= \int f(\mathbf{Y} | \mathbf{X},\boldsymbol{\theta}) f(\mathbf{O} | \mathbf{Y}_{obs},\mathbf{Y}_{mis}, \mathbf{X},\boldsymbol{\phi}) d\mathbf{Y}_{mis}\\
&\hspace{-2in}= \int f(\mathbf{Y}_{obs} |\mathbf{X}_{obs}, \boldsymbol{\theta}) f(\mathbf{Y}_{mis} | \mathbf{X}_{mis},\boldsymbol{\theta})f(\mathbf{O} | \mathbf{Y},\mathbf{X},\boldsymbol{\phi})d\mathbf{Y}_{mis}\\
&\hspace{-2in}= f(\mathbf{Y}_{obs} | \mathbf{X}_{obs},\boldsymbol{\theta}) \int f(\mathbf{Y}_{mis} | \mathbf{X}_{mis},\boldsymbol{\theta})f(\mathbf{O} | \mathbf{Y},\mathbf{X},\boldsymbol{\phi})d\mathbf{Y}_{mis}
\end{align*}

-   Under the MNAR assumption, we are NOT allowed to ignore the missing data. We must specify a model for the missing data.

-   This is really hard! We can ignore this in our class.

## Summary of missing mechanisms

-   Under MCAR and MAR, we are allowed to fit our model to the observed data (i.e., a complete case analysis/listwise deletion). Under these settings the missingness is considered **ignorable**.

-   Under MAR, fitting the complete case analysis is not efficient and advanced techniques are needed to guarentee proper statistical inference.

-   Under MNAR, we must model the missing data mechanism. This data is considered **non-ignorable**.

# Bayesian approches to missing data

-   Full Bayesian joint model
-   Multiple imputation

## Let's motivate with some data

```{r, echo = FALSE}
library(openintro)
fulldata <- data.frame(y = bdims$wgt,
                       x1 = bdims$hgt,
                       x2 = bdims$sex)
```

```{r}
#| echo: false
#| fig-align: "center"
#| fig-height: 4
#| layout-ncol: 1
fulldata$Sex <- as.factor(fulldata$x2)
levels(fulldata$Sex) <- c("Female", "Male")
ggplot(fulldata, aes(x = x1, y = y, color = Sex)) +
  geom_point() + 
  labs(x = "Height (centimeters)", 
       y = "Weight (kilograms)",
       color = "Sex")
```

## Simulate missing data

```{r}
set.seed(54)
n <- nrow(fulldata)
expit <- function(x) exp(x) / (1 + exp(x))
fulldata$o <- rbinom(n, 1, expit(1.5 * scale(fulldata$x1) - 3 * fulldata$x2))
head(fulldata)
```

## Visualize data

```{r}
#| echo: false
#| fig-align: "center"
#| fig-width: 4
#| fig-height: 4
#| layout-ncol: 2
ggplot(fulldata, aes(x = x1, y = y, color = Sex)) +
  geom_point() + 
  labs(x = "Height (centimeters)", 
       y = "Weight (kilograms)",
       subtitle = "Full data") + 
  theme(legend.position = "bottom")
ggplot(fulldata, aes(x = x1, y = y)) +
  geom_point(color = "gray") +
  geom_point(data = fulldata[fulldata$o == 1, ], aes(x = x1, y = y, color = Sex)) + 
  labs(x = "Height (centimeters)", 
       y = "Weight (kilograms)",
       subtitle = "MAR") + 
  theme(legend.position = "bottom")
```

## Model fits

```{r}
#| echo: false
#| fig-align: "center"
#| fig-width: 4
#| fig-height: 4
#| layout-ncol: 2
ggplot(fulldata, aes(x = x1, y = y, color = Sex)) +
  geom_point() + 
  geom_smooth(method = lm) + 
  labs(x = "Height (centimeters)", 
       y = "Weight (kilograms)",
       subtitle = "Full data") + 
  theme(legend.position = "bottom")
ggplot(fulldata[fulldata$o == 1, ], aes(x = x1, y = y, color = Sex)) +
  geom_point(data = fulldata, aes(x = x1, y = y), color = "gray") + 
  geom_point() +
  geom_smooth(method = lm) + 
  labs(x = "Height (centimeters)", 
       y = "Weight (kilograms)",
       subtitle = "MAR") + 
  theme(legend.position = "bottom")
```

## Full Bayesian model

-   Since we are Bayesians, we can treat the unobserved $\mathbf{Y}_{mis}$ as parameters and work with the complete data likelihood.

\begin{align*}
f(\boldsymbol{\theta}, \boldsymbol{\phi}, \mathbf{Y}_{mis} | \mathbf{Y}_{obs},\mathbf{O},\mathbf{X}) &\propto f(\mathbf{Y}, \mathbf{O}, \boldsymbol{\theta}, \boldsymbol{\phi} | \mathbf{X})\\
&\hspace{-4in}=f(\mathbf{Y}, \mathbf{O} | \mathbf{X}, \boldsymbol{\theta},\boldsymbol{\phi})f(\boldsymbol{\theta},\boldsymbol{\phi})\\
&\hspace{-4in}= f(\mathbf{Y} | \mathbf{X}, \boldsymbol{\theta})f(\mathbf{O} | \mathbf{Y}, \mathbf{X}, \boldsymbol{\phi})f(\boldsymbol{\theta},\boldsymbol{\phi})\\
&\hspace{-4in}=f(\mathbf{Y}_{obs} | \mathbf{X}_{obs}, \boldsymbol{\theta})f(\mathbf{Y}_{mis} | \mathbf{X}_{mis}, \boldsymbol{\theta})f(\mathbf{O} | \mathbf{Y}, \mathbf{X}, \boldsymbol{\phi})f(\boldsymbol{\theta},\boldsymbol{\phi})\\
\end{align*}

-   We can simplify this posterior by dropping the missing data mechanism.

## Full Bayesian model

-   Assuming that $f(\boldsymbol{\theta},\boldsymbol{\phi}) = f(\boldsymbol{\theta})f(\boldsymbol{\phi})$, the missingness process does not need to be explicitly modeled when we are interested in inference for $\boldsymbol{\theta}$.

\begin{align*}
&f(\boldsymbol{\theta}, \mathbf{Y}_{mis} | \mathbf{Y}_{obs},\mathbf{O},\mathbf{X})\\ &\hspace{2in}\propto f(\mathbf{Y}_{obs} | \mathbf{X}_{obs}, \boldsymbol{\theta})f(\mathbf{Y}_{mis} | \mathbf{X}_{mis}, \boldsymbol{\theta})f(\boldsymbol{\theta})
\end{align*}

## Full Bayesian model for linear regression

\begin{align*}
Y_i | \alpha, \beta, \sigma^2 &\stackrel{ind}{\sim} N(\alpha + \mathbf{x}_i\boldsymbol{\beta}, \sigma^2), \quad i \in \mathcal N_{obs}\\
Y_i | \alpha, \beta, \sigma^2&\stackrel{ind}{\sim} N(\alpha + \mathbf{x}_i \boldsymbol{\beta}, \sigma^2), \quad i \in \mathcal N_{mis}\\
\alpha &\sim f(\alpha)\\
\beta &\sim f(\boldsymbol{\beta})\\
\sigma &\sim f(\sigma),
\end{align*}

-   $\mathbf{x}_i = (height_i, 1(sex_i = male), height_i \times 1(sex_i = male))$.

## Full Bayesian missing data model in Stan

```{stan output.var = "missing", eval = FALSE}
// saved in missing-full-bayes.stan
data {
  int<lower = 1> n_obs;
  int<lower = 1> n_mis;
  int<lower = 1> p;
  vector[n_obs] Y_obs;
  matrix[n_obs, p] X_obs;
  matrix[n_mis, p] X_mis;
}
transformed data {
  vector[n_obs] Y_obs_centered;
  real Y_bar;
  matrix[n_obs, p] X_obs_centered;
  matrix[n_mis, p] X_mis_centered;
  row_vector[p] X_bar;
  Y_bar = mean(Y_obs);
  Y_obs_centered = Y_obs - Y_bar;
  matrix[n_obs + n_mis, p] X = append_row(X_obs, X_mis);
  for (i in 1:p) {
    X_bar[i] = mean(X[, i]);
    X_obs_centered[, i] = X_obs[, i] - X_bar[i];
    X_mis_centered[, i] = X_mis[, i] - X_bar[i];
  }
}
parameters {
  real alpha_centered;
  vector[p] beta;
  real<lower = 0> sigma;
  vector[n_mis] Y_mis_centered;
}
model {
  target += normal_lpdf(Y_obs_centered | alpha_centered + X_obs_centered * beta, sigma);
  target += normal_lpdf(Y_mis_centered | alpha_centered + X_mis_centered * beta, sigma);
  target += normal_lpdf(alpha_centered | 0, 10);
  target += normal_lpdf(beta | 0, 10);
  target += normal_lpdf(sigma | 0, 10);
}
generated quantities {
  real alpha;
  vector[n_mis] Y_mis;
  alpha = Y_bar + alpha_centered - X_bar * beta;
  Y_mis = Y_mis_centered + Y_bar;
}
```

## Fit missing data model

```{r, eval = FALSE}
stan_missing_data_model <- stan_model(file = "missing-full-bayes.stan")
X <- model.matrix(~ x1 * x2, data = fulldata)[, -1]
stan_data_missing_data <- list(
  n_obs = sum(fulldata$o == 1),
  n_mis = sum(fulldata$o == 0),
  p = ncol(X),
  Y_obs = array(fulldata$y[fulldata$o == 1]),
  X_obs = X[fulldata$o == 1, ],
  X_mis = X[fulldata$o == 0, ]
)
fit_full_bayes_joint <- sampling(stan_missing_data_model, stan_data_missing_data)
print(fit_full_bayes_joint, pars = c("alpha", "beta", "sigma"), probs = c(0.025, 0.975))
```

```{r, echo = FALSE}
X <- model.matrix(~ x1 * x2, data = fulldata)[, -1]
stan_data_missing_data <- list(
  n_obs = sum(fulldata$o == 1),
  n_mis = sum(fulldata$o == 0),
  p = ncol(X),
  Y_obs = array(fulldata$y[fulldata$o == 1]),
  X_obs = X[fulldata$o == 1, ],
  X_mis = X[fulldata$o == 0, ]
)
fit_full_bayes_joint <- readRDS(file = "/Users/sib2/Box Sync/Faculty/Education/biostat725-sp25/course-material/r-objects/fit-missing.rds")
```

## Explore model fit

```{r}
print(fit_full_bayes_joint, pars = c("alpha", "beta", "sigma"), probs = c(0.025, 0.975))
```

## Explore latent missing variable

```{r}
#| fig-width: 5
#| fig-align: "center"
library(bayesplot)
Y_mis <- rstan::extract(fit_full_bayes_joint, pars = "Y_mis")$Y_mis
colnames(Y_mis) <- paste0("Y_mis[", 1:ncol(Y_mis), "]")
mcmc_areas_ridges(Y_mis[, 1:10])
```

## Summary of Bayesian joint model

-   The joint model treats the missing data as parameters (i.e., latent variables in the model).

-   Placing a prior on the missing data allows us to jointly learn the model parameters and the missing data.

-   Equivalent to multiple imputation at every step of the HMC. Can be slow!

-   In Stan, we can only treat continuous missing data as parameters, so this method is somewhat limited (what do we do if the missing data is a binary outcome?)

## Multiple imputation

-   As an alternative to fitting a joint model, there are many approaches that allow us to impute missing data before the actual model fitting takes place.

-   Each missing value is not imputed once but $m$ times leading to a total of $m$ fully imputed data sets.

-   The model can then be fitted to each of those data sets separately and results are pooled across models, afterwards.

-   One widely applied package for multiple imputation is `mice` (Buuren & Groothuis-Oudshoorn, 2010) and we will use it in combination with Stan.

## Mice

-   Here, we apply the default settings of mice, which means that all variables will be used to impute missing values in all other variables and imputation functions automatically chosen based on the variablesâ€™ characteristics.

```{r}
library(mice)
m <- 100
mardata <- data.frame(
  y = fulldata$y,
  x1 = fulldata$x1,
  x2 = fulldata$x2
)
mardata$y[fulldata$o == 0] <- NA
imp <- mice(mardata, m = m, print = FALSE)
```

## Mice

- Now, we have $m = 5$ imputed data sets stored within the `imp` object. 

  - In practice, we will likely need more than 5 of those to accurately account for the uncertainty induced by the missingness, perhaps even in the area of 100 imputed data sets (Zhou & Reiter, 2010).

- We can extract the first imputed dataset.

```{r}
data <- complete(imp, 1)
```

-   We can now fit our model $m$ times for each imputed data sets and combine the posterior samples from all chains for inference.

## Model for the imputed datasets

```{stan output.var = "cc", eval = FALSE}
// bayesian-mi.stan
data {
  int<lower = 1> n;
  int<lower = 1> p;
  vector[n] Y;
  matrix[n, p] X;
}
transformed data {
  vector[n] Y_centered;
  real Y_bar;
  matrix[n, p] X_centered;
  row_vector[p] X_bar;
  Y_bar = mean(Y);
  Y_centered = Y - Y_bar;
  for (i in 1:p) {
    X_bar[i] = mean(X[, i]);
    X_centered[, i] = X[, i] - X_bar[i];
  }
}
parameters {
  real alpha_centered;
  vector[p] beta;
  real<lower = 0> sigma;
}
model {
  target += normal_lpdf(Y_centered | alpha_centered + X_centered * beta, sigma);
  target += normal_lpdf(alpha_centered | 0, 10);
  target += normal_lpdf(beta | 0, 10);
  target += normal_lpdf(sigma | 0, 10);
}
generated quantities {
  real alpha;
  alpha = Y_bar + alpha_centered - X_bar * beta;
}
```

## Fit the model to the imputed data

```{r, eval = FALSE}
stan_bayesian_mi <- stan_model(file = "bayesian-mi.stan")
alpha <- beta <- sigma <- r_hat <- n_eff <- NULL
n_chains <- 2
for (i in 1:m) {
  
  ###Load each imputed dataset and fit the Stan complete case model
  data <- complete(imp, i)
  X <- model.matrix(~ x1 * x2, data = data)[, -1, drop = FALSE]
  stan_data_bayesian_mi <- list(
    n = nrow(data),
    p = ncol(X),
    Y = data$y,
    X = X
  )
  fit_mi <- sampling(stan_bayesian_mi, stan_data_bayesian_mi, chains = n_chains)
  
  ###Save convergence diagnostics from each imputed dataset
  r_hat <- cbind(r_hat, summary(fit_mi)$summary[, "Rhat"])
  n_eff <- cbind(n_eff, summary(fit_mi)$summary[, "n_eff"])
  pars <- rstan::extract(fit_mi, pars = c("alpha", "beta", "sigma"))
  
  ### Save the parameters from each imputed dataset
  n_sims_chain <- length(pars$alpha) / n_chains
  alpha <- rbind(alpha, cbind(i, rep(1:n_chains, each = n_sims_chain), pars$alpha))
  beta <- rbind(beta, cbind(i, rep(1:n_chains, each = n_sims_chain), pars$beta))
  sigma <- rbind(sigma, cbind(i, rep(1:n_chains, each = n_sims_chain), pars$sigma))
}
```

## Inspect traceplots

![](images/14/alpha.png){fig-align="center" height="300"}

## Inspect traceplots

![](images/14/beta%5B1%5D.png){fig-align="center" height="300"}

## Inspect traceplots

![](images/14/beta%5B2%5D.png){fig-align="center" height="300"}

## Inspect traceplots

![](images/14/beta%5B3%5D.png){fig-align="center" height="300"}

## Inspect traceplots

![](images/14/sigma.png){fig-align="center" height="300"}

## Comparison of methods: $\alpha$ {.small}

```{r, echo = FALSE}
load(file = "/Users/sib2/Box Sync/Faculty/Education/biostat725-sp25/course-material/r-objects/missing-overall-summary.RData")
overall_summary$Setting <- rep(1:6, each = 5)
overall_summary <- overall_summary[overall_summary$Setting %in% c(3:6), ]
overall_summary <- overall_summary[overall_summary$Parameter == "alpha", ]
overall_summary$Model <- c("Bayes Joint", "Bayes MI", "OLS", "OLS")
overall_summary <- overall_summary[order(overall_summary$Data), ]
overall_summary |> select(-c(Parameter, Setting)) |>
  kable(digits = 2, row.names = FALSE)
```

## Comparison of methods: $\beta_1$ {.small}

```{r, echo = FALSE}
load(file = "/Users/sib2/Box Sync/Faculty/Education/biostat725-sp25/course-material/r-objects/missing-overall-summary.RData")
overall_summary$Setting <- rep(1:6, each = 5)
overall_summary <- overall_summary[overall_summary$Setting %in% c(3:6), ]
overall_summary <- overall_summary[overall_summary$Parameter == "beta[1]", ]
overall_summary$Model <- c("Bayes Joint", "Bayes MI", "OLS", "OLS")
overall_summary <- overall_summary[order(overall_summary$Data), ]
overall_summary |> select(-c(Parameter, Setting)) |>
  kable(digits = 2, row.names = FALSE)
```

## Comparison of methods: $\beta_2$ {.small}

```{r, echo = FALSE}
load(file = "/Users/sib2/Box Sync/Faculty/Education/biostat725-sp25/course-material/r-objects/missing-overall-summary.RData")
overall_summary$Setting <- rep(1:6, each = 5)
overall_summary <- overall_summary[overall_summary$Setting %in% c(3:6), ]
overall_summary <- overall_summary[overall_summary$Parameter == "beta[2]", ]
overall_summary$Model <- c("Bayes Joint", "Bayes MI", "OLS", "OLS")
overall_summary <- overall_summary[order(overall_summary$Data), ]
overall_summary |> select(-c(Parameter, Setting)) |>
  kable(digits = 2, row.names = FALSE)
```

## Comparison of methods: $\beta_3$ {.small}

```{r, echo = FALSE}
load(file = "/Users/sib2/Box Sync/Faculty/Education/biostat725-sp25/course-material/r-objects/missing-overall-summary.RData")
overall_summary$Setting <- rep(1:6, each = 5)
overall_summary <- overall_summary[overall_summary$Setting %in% c(3:6), ]
overall_summary <- overall_summary[overall_summary$Parameter == "beta[3]", ]
overall_summary$Model <- c("Bayes Joint", "Bayes MI", "OLS", "OLS")
overall_summary <- overall_summary[order(overall_summary$Data), ]
overall_summary |> select(-c(Parameter, Setting)) |>
  kable(digits = 2, row.names = FALSE)
```

## Comparison of methods: $\sigma$ {.small}

```{r, echo = FALSE}
load(file = "/Users/sib2/Box Sync/Faculty/Education/biostat725-sp25/course-material/r-objects/missing-overall-summary.RData")
overall_summary$Setting <- rep(1:6, each = 5)
overall_summary <- overall_summary[overall_summary$Setting %in% c(3:6), ]
overall_summary <- overall_summary[overall_summary$Parameter == "sigma", ]
overall_summary$Model <- c("Bayes Joint", "Bayes MI", "OLS", "OLS")
overall_summary <- overall_summary[order(overall_summary$Data), ]
overall_summary |> select(-c(Parameter, Setting)) |>
  kable(digits = 2, row.names = FALSE)
```

## Prepare for next class

-   Work on [HW 03](https://biostat725-sp25.netlify.app/hw/hw-03).

-   Complete reading to prepare for Thursday's lecture

-   Thursday's lecture: Hierarchical Models

---
title: "Live-Coding"
subtitle: Gamma regression for ED length of stay
search: false
format: html
---

::: callout-important
## Due date

This assignment is due on **Thursday, March 25 at 11:45am.** To be considered on time, the following must be done by the due date:

-   Final `.qmd` and `.pdf` files pushed to your GitHub repo
-   Final `.pdf` file submitted on Gradescope
:::

# Getting started

-   Go to the [biostat725-sp25](https://www.github.com/biostat725-sp25) organization on GitHub. Click on the repo with the prefix **live-coding**. It contains the starter documents you need to complete the live coding exercise.

-   Clone the repo and start a new project in RStudio. See the [AE 01 instructions](https://biostat725-sp25.netlify.app/ae/ae-01-mcmc#clone-the-repo-start-new-rstudio-project) for details on cloning a repo and starting a new project in R.

# Packages

The following packages are used in this assignment:

```{r}
#| eval: true
#| message: false

library(tidyverse)
library(rstan)
library(bayesplot)
library(knitr)
library(loo)

# load other packages as needed
```

# Data

This live coding exercise will use data from the [MIMIC-IV-ED Demo](https://physionet.org/content/mimic-iv-ed-demo/2.2/). We will use the same data from Exam 01. To obtain an analysis data, source the R script to obtain a dataset called `exam1_data`.

```{r, eval = FALSE, message = FALSE, warning = FALSE}
source("exam-01-process-data.R")
```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
source("/Users/sib2/Box Sync/Faculty/Education/biostat725-sp25/course-material/exam/exam1/exam-01-process-data.R")
```

We will use the following variables from the dataset:

-   `los`: continuous, ED length of stay in hours.

-   `race`: categorical with three levels, `white`, `black`, and `other`.

-   `arrival`: categorical with two levels that reports mode of arrival to ED, `ambulance`, and `walk-in`.

-   `sex`: binary, `female` and `male`.

-   `acuity_score`: categorical with three levels that reports a patient's level of emergency, `stable`, `complex/high-risk`, and `moderate-risk`.

-   `o2sat`: continuous, oxygen saturation in %.

# Motivation

In Exam 01, we modeled ED length of stay using quantile regression. Another approach for modeling the ED length of stay is Gamma regression. 

```{r}
#| message: false
#| warning: false
#| echo: false
#| fig-align: "center"
#| fig-width: 8
#| fig-height: 5
exam1_data |> 
  ggplot(aes(x = los)) + 
  geom_histogram() + 
  labs(x = "ED Length of Stay (hours)",
       y = "Count")
```

The shape of the ED length of stay variable makes it a nice candidate for Gamma regression because it is continuous, positive, and right-skewed. In this live-coding exercise we will implement Gamma regression for ED length of stay using a log link function.

# Gamma regression

## Definition of Gamma Random Variable

A random variable $Y$ with shape $\lambda > 0$ and scale $\theta > 0$ can be written as $Y \sim \text{Gamma}(\lambda, \theta)$ with density $f_Y(y | \lambda, \theta) = (\Gamma(\lambda) \theta^{\lambda})^{-1}y^{\lambda-1}\exp\{-y/\theta\}$. The mean and variance are given by: $\mathbb{E}[Y] = \lambda\theta = \mu$ and $\mathbb{V}(Y) = \lambda\theta^2$. One way to perform regression for a Gamma distributed random variable is to make a change-of-variables so that the density is parameterized in terms of the mean $\mu = \lambda\theta$ and the un-transformed shape parameter $\tau = \lambda$. The density for this transformed distribution is,

$$f_Y(y | \tau, \mu) = \frac{\exp\{-(y\tau)/\mu\}y^{\tau-1}}{(\mu/\tau)^{\tau} \Gamma(\tau)},$$

and the log density is given by,

$$\log f_Y(y | \tau, \mu) = -(y\tau)/\mu + (\tau-1)\log (y) + \tau[\log(\tau) - \log(\mu)] - \log (\Gamma(\tau)).$$ To perform Gamma regression, predictors are related to the mean using a log link function, $\log \mu_i = \alpha + \mathbf{x}_i \boldsymbol{\beta}$. Thus, the full model can be written as,

\begin{align*}
Y_i &\stackrel{ind}{\sim} \text{Gamma}(\tau, \mu_i),\quad i = 1,\ldots,n\\
\log \mu_i &= \alpha + \mathbf{x}_i \boldsymbol{\beta},\\
\boldsymbol{\Omega} &\sim f(\boldsymbol{\Omega}),
\end{align*}

where $\boldsymbol{\Omega} = (\alpha,\boldsymbol{\beta},\tau)$.

## Interpreting Coefficients

To interpret the coefficients, you must exponentiate them, $\gamma_j = \exp\{\beta_j\}$. It is easy to see that $\gamma_j$ can be interpreted as a multiplicative factor on the mean. To see this, we can consider a particular variable $x_{ij}$ and its corresponding coefficient $\beta_j$. Define $\mathbf{x}_{i,-j} = (x_{i1},\ldots,x_{i(j-1)}, x_{i(j+1)}, \ldots, x_{ip})$ and $\boldsymbol{\beta}_{-j} = (\beta_{1},\ldots,\beta_{j-1}, \beta_{j+1}, \ldots, \beta_{p})^\top$ as object that have removed the $j$-th entry. Now assume that we observe two observations $\mathbf{x}_i$ and $\mathbf{x}_{i'}$, such that the only difference between the two are that $x_{i'j} = x_{ij} + 1$. From this setup, we can see that indeed the $\gamma_j$ can be interpreted as being multiplicative on the mean, \begin{align*}
\mu_{i'} &= \exp\{\alpha +\mathbf{x}_{i'}\boldsymbol{\beta}\}\\
&= \exp\left\{\alpha +\mathbf{x}_{i',-j} \boldsymbol{\beta}_{-j} + x_{i'j} \beta_j\right\}\\
&= \exp\left\{\alpha +\mathbf{x}_{i,-j} \boldsymbol{\beta}_{-j} + (x_{ij} + 1) \beta_j\right\}\\
&= \exp\left\{\alpha +\mathbf{x}_{i,-j} \boldsymbol{\beta}_{-j} + x_{ij} \beta_j + \beta_j\right\}\\
&= \exp\left\{\alpha +\mathbf{x}_{i} \boldsymbol{\beta} + \beta_j\right\}\\
&= \exp\left\{\alpha +\mathbf{x}_{i} \boldsymbol{\beta}\right\}\exp\{\beta_j\}\\
&= \mu_i \gamma_j.
\end{align*}

Thus, a one-unit increase in $x_{ij}$ leads to a multiplicative increase in the mean of $\gamma_j$.

# Exercises

We are interested in fitting a Gamma regression to the ED length of stay variable, defined as $Y_i$ for $i = 1,\ldots,n$. We would like to fit the following model,

\begin{align*}
Y_i &\stackrel{ind}{\sim} \text{Gamma}(\tau,\mu_i)\\
\log \mu_i &= \alpha + \mathbf{x}_i\boldsymbol{\beta}\\
&= \alpha + \beta_1 black_i + \beta_2 other_i + \beta_3 arrival\_walkin_i\\
&\quad+ \beta_4 male_i + \beta_5 acuity\_score\_moderate_i\\
&\quad+ \beta_6 acuity\_score\_complex_i + \beta_7 o2sat_i.
\end{align*}

When you fit the model, make sure to center the predictors, such that $\log \mu_i = \alpha^* + \mathbf{x}_i^* \boldsymbol{\beta}$, where $\mathbf{x}_i^* = \mathbf{x}_i - \bar{\mathbf{x}}$ and $\bar{\mathbf{x}} = \frac{1}{n}\sum_{i=1}^n \mathbf{x}_i$. Use the following priors $\alpha^* \sim N(0,4^2)$, $\beta_j \stackrel{ind}{\sim} N(0,1^2)$, $j = 1,\ldots,p$ and $\tau \sim \text{Exponential}(1).$

## Exercise 1

To perform Gamma regression in Stan, we need to manually encode the likelihood function. Create a function in your Stan code called `gamma_regression_lpdf` that encodes the log-likelihood function, $\sum_{i=1}^n \log f_Y(Y_i|\tau,\mu_i)$. To answer this question, print the function you created using a `stan` code chunk.

## Exercise 2

Using your function from **Exercise 1** fit the Gamma regression model.

## Exercise 3

Sanity check: `summary(glm(los ~ race + arrival + sex + acuity_score + o2sat, data = exam1_data, family = Gamma(link = "log")))`. How do the results compare?

## Exercise 4

We would like to perform posterior predictive checks for our model. In order to do this we must sample from a Gamma random variable in the generated quantities block. The only built in [Stan function](https://mc-stan.org/docs/functions-reference/positive_continuous_distributions.html#gamma-distribution) for sampling from Gamma random variables is `gamma_rng` which samples from a Gamma random variable with $Y \sim \text{Gamma}(\lambda, \kappa)$ with density $f_Y(y | \lambda, \kappa) = \frac{\kappa^{\lambda}}{\Gamma(\lambda)}y^{\lambda-1}\exp\{-\kappa y\}$, where $\lambda$ is the shape parameter and $\kappa$ is the inverse scale (or rate), such that $\kappa = 1 / \theta$. Use the `gamma_rng` to create a function called `gamma_regression_rng` that can be used to sample the posterior predictive distribution.

## Exercise 5

Using the function from **Exercise 4**, perform a posterior predictive check to assess model fit. Does the model fit the data well?



